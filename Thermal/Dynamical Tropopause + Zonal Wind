import numpy as np
import xarray as xr
import matplotlib.pyplot as plt

# ---------------------------------------------------
# 1. Load Data
# ---------------------------------------------------
file_path = r"C:\Users\moham\OneDrive\Documents\stage\98a4d3ee3b3b8aa12699f1286ad0843f.nc"
ds = xr.open_dataset(file_path)

t = ds['t'].isel(valid_time=0).values
z = ds['z'].isel(valid_time=0).values
pv = ds['pv'].isel(valid_time=0).values
u = ds['u'].isel(valid_time=0).values

plev = ds['pressure_level'].values
lat = ds['latitude'].values
lon = ds['longitude'].values

g = 9.80665

z_height = z / g
pv = pv / 1e-6  # Ensure pv is in PVU!

# ---------------------------------------------------
# 2. Thermal Tropopause
# ---------------------------------------------------
thermal_tp = []

for j in range(len(lat)):
    found = False
    for k in range(len(plev) - 1):
        T1 = t[k, j, :].mean()
        T2 = t[k + 1, j, :].mean()
        Z1 = z_height[k, j, :].mean()
        Z2 = z_height[k + 1, j, :].mean()

        dT = T2 - T1
        dZ = Z2 - Z1

        if dZ != 0:
            lapse_rate = -dT / dZ * 1000
            if lapse_rate <= 2:
                thermal_tp.append((lat[j], plev[k]))
                found = True
                break
    if not found:
        thermal_tp.append((lat[j], np.nan))

# ---------------------------------------------------
# 3. Dynamical Tropopause
# ---------------------------------------------------
dyn_tp = []

for j in range(len(lat)):
    found = False
    for k in range(len(plev)):
        pv_mean = pv[k, j, :].mean()
        if pv_mean >= 2:
            dyn_tp.append((lat[j], plev[k]))
            found = True
            break
    if not found:
        dyn_tp.append((lat[j], np.nan))

# ---------------------------------------------------
# 4. Mean Zonal Wind
# ---------------------------------------------------
u_mean = u.mean(axis=2)  # Zonal mean: (pressure_level, latitude)

# ---------------------------------------------------
# 5. Plot Latitude–Pressure with Wind Contours
# ---------------------------------------------------
thermal_lat, thermal_p = zip(*thermal_tp)
dyn_lat, dyn_p = zip(*dyn_tp)

fig, ax = plt.subplots(figsize=(8, 6))
ax.invert_yaxis()
ax.set_yscale("log")
ax.set_ylabel("Pressure (hPa)")
ax.set_xlabel("Latitude (degrees north)")

# Set custom y-axis ticks
ax.set_yticks([1000, 850, 700, 500, 300, 200, 100, 50, 10])
ax.get_yaxis().set_major_formatter(plt.ScalarFormatter())

# Plot zonal wind contours
cs = ax.contour(lat, plev, u_mean, colors='black', linewidths=0.7, levels=np.arange(-40, 45, 5))
ax.clabel(cs, fmt='%d', fontsize=7)

# Plot tropopauses
ax.plot(thermal_lat, thermal_p, 'ro', markersize=2, label='Thermal Tropopause (WMO)')
ax.plot(dyn_lat, dyn_p, 'g-', linewidth=1.5, label='Dynamical Tropopause (2 PVU)')

ax.set_title("Thermal/Dynamical Tropopause + Zonal Wind — 1 Jan 2010 00:00 UTC")
ax.legend()
ax.grid(True, which="both", linestyle='--')

plt.tight_layout()
plt.show()

